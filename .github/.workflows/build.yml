name: Build and Push

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # runs daily at 00:00

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres_image_version: ['14.8']
        rdkit_version: ['2023_03_1', '2022_03_1']
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get latest PostgreSQL version
      id: pg_latest
      run: |
        echo "::set-output name=version::$(curl -sS https://www.postgresql.org/ftp/source/ | grep -oP '(?<=v)[0-9]+\.[0-9]+' | sort -V | tail -1)"

    - name: Get latest RDKit version
      id: rdkit_latest
      run: |
        echo "::set-output name=version::$(curl -sS https://github.com/rdkit/rdkit/releases | grep -Po '(?<=v)[0-9]{4}_\d+' | sort -V | tail -1)"

    - name: Determine the PostgreSQL versions to use
      id: pg
      run: |
        echo "::set-output name=image_version::${{ matrix.postgres_image_version }}"
        echo "::set-output name=version::$(echo ${{ matrix.postgres_image_version }} | cut -d '.' -f 1)"

    - name: Determine the RDKit version to use
      id: rdkit
      run: |
        echo "::set-output name=version::${{ matrix.rdkit_version }}"

    - name: Check if image already exists
      id: check_image
      run: |
        export EXISTS=$(docker manifest inspect ghcr.io/${{ github.repository }}/postgres-rdkit:postgres-${{ steps.pg.outputs.version }}-rdkit-${{ steps.rdkit.outputs.version }} > /dev/null ; echo $?)
        echo "::set-output name=exists::$EXISTS"

    - name: Build and push
      if: steps.check_image.outputs.exists == '1'
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/postgres-rdkit:postgres-${{ steps.pg.outputs.version }}-rdkit-${{ steps.rdkit.outputs.version }}
          ${{ (steps.pg.outputs.image_version == steps.pg_latest.outputs.version && steps.rdkit.outputs.version == steps.rdkit_latest.outputs.version) && 'ghcr.io/${{ github.repository }}/postgres-rdkit:latest' || '' }}
        build-args:
          postgres_image_version=${{ steps.pg.outputs.image_version }}
          postgres_version=${{ steps.pg.outputs.version }}
          rdkit_git_ref=Release_${{ steps.rdkit.outputs.version }}
