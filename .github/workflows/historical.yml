name: Build and Push historical versions

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # runs daily at 00:00

jobs:
  historical:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres_version: ['14.8']
        rdkit_version: ['2023_03_1', '2022_03_1']
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Check if image already exists
      id: check_image
      run: |
        image="ghcr.io/${{ github.repository }}/postgres-rdkit:postgres-${{ matrix.postgres_version }}-rdkit-${{ matrix.rdkit_version }}"
        echo "Checking if image $image exists..."
        if output=$(docker manifest inspect "$image" 2>&1); then
          echo "Image $image already exists, no need to build."
          echo "exists=0" >> "$GITHUB_OUTPUT"
        else
          if [[ $output == *"manifest unknown"* ]]; then
            echo "Image $image does not exist, need to build."
            echo "exists=1" >> "$GITHUB_OUTPUT"
          else
            echo "An unexpected error occurred while trying to check if the image exists:"
            echo "$output"
            exit 1
          fi
        fi

    - name: Set PostgreSQL major version
      id: pg_major
      run:
        echo "version=$(echo ${{ matrix.postgres_version }} | cut -d '.' -f 1)" >> "$GITHUB_OUTPUT"

    - name: Build and push
      if: steps.check_image.outputs.exists == '1'
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}/postgres-rdkit:postgres-${{ matrix.postgres_version }}-rdkit-${{ matrix.rdkit_version }}
        build-args: |
          postgres_image_version=${{ matrix.postgres_version }}
          postgres_major_version=${{ steps.pg_major.version }}
          rdkit_git_ref=Release_${{ matrix.rdkit_version }}
