name: Build, Push and Create Release

on:
  workflow_dispatch:
  push:
    branches:
      - 'postgres-*rdkit-*'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract PostgreSQL and RDKit versions from branch name
      id: extract_versions
      run: |
        branch_name=$(git branch --show-current)
        echo "branch_name=$branch_name" >> "$GITHUB_OUTPUT"
        pg_version=$(echo $branch_name | cut -d '-' -f 2)
        echo "pg_version=$pg_version" >> "$GITHUB_OUTPUT"
        echo "pg_major_version=$(echo $pg_version | cut -d '.' -f 1)" >> "$GITHUB_OUTPUT"
        echo "rdkit_version=$(echo $branch_name | cut -d '-' -f 4)" >> "$GITHUB_OUTPUT"
        echo "git_sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

    - name: Check if image already exists
      id: check_image
      run: |
        image="ghcr.io/${{ github.repository }}/postgres-rdkit:${{ steps.extract_versions.outputs.branch_name }}-${{ steps.extract_versions.outputs.git_sha_short }}"
        echo "Checking if image $image exists..."
        if output=$(docker manifest inspect "$image" 2>&1); then
          echo "Image $image already exists, no need to build."
          echo "exists=0" >> "$GITHUB_OUTPUT"
        else
          if [[ $output == *"manifest unknown"* ]]; then
            echo "Image $image does not exist, need to build."
            echo "exists=1" >> "$GITHUB_OUTPUT"
          else
            echo "An unexpected error occurred while trying to check if the image exists:"
            echo "$output"
            exit 1
          fi
        fi

    - name: Build and push
      if: steps.check_image.outputs.exists == '1'
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}/postgres-rdkit:${{ steps.extract_versions.outputs.branch_name }}-${{ steps.extract_versions.outputs.git_sha_short }}
        build-args: |
          postgres_image_version=${{ steps.extract_versions.outputs.pg_version }}
          postgres_major_version=${{ steps.extract_versions.outputs.pg_major_version }}
          rdkit_git_ref=Release_${{ steps.extract_versions.outputs.rdkit_version }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ steps.extract_versions.outputs.branch_name }}-${{ steps.extract_versions.outputs.git_sha_short }}
        release_name: Release ${{ steps.extract_versions.outputs.branch_name }}-${{ steps.extract_versions.outputs.git_sha_short }}
        draft: false
        prerelease: false
